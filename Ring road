#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define all(x) x.begin(), x.end()
ll mx=LLONG_MIN;
 map<pair<ll,ll>,ll>mp;
 set<pair<ll,ll>>b;
 ll di=0,rev=0;
 ll val;
 void dfs(ll node , vector<ll>adj[],vector<ll>&vis){
      vis[node]=1;
       val = node;
      for(auto it: adj[node]){
           if(!vis[it]){
              if(b.find({node,it})!=b.end()){
                 di+=mp[{node,it}];
              }
              else rev+=mp[{it,node}];
              dfs(it,adj,vis);
           }
      }
 }
void solve() {
        //    mp.clear();
        //   b.clear();
        //   di = 0;
        //  rev = 0;
       ll n; cin >>n;
       vector<ll>adj[n+1];
        vector<ll>vis(n+1,0);
       for(ll i=0;i<n;i++){
           ll x, y , wt; cin >> x >> y >> wt; x--; y--;
           mp[{x,y}]=wt;
           b.insert({x,y});
           adj[x].push_back(y);
           adj[y].push_back(x);
       }
       dfs(0,adj,vis);
       if(b.find({val,0})!=b.end()){
           di+=mp[{val,0}];
       }
       else rev+=mp[{0,val}];
       cout << min(di,rev)<<endl;
   //   cout << di <<' '<<rev<<endl;

}      
signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t=1;
   //  cin >> t;
    while (t--)
     solve();
    return 0;
}
